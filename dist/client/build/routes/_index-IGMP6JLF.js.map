{
  "version": 3,
  "sources": ["../../../../app/routes/_index.jsx"],
  "sourcesContent": ["import {defer} from '@shopify/remix-oxygen';\nimport {Await, useLoaderData, Link} from '@remix-run/react';\nimport {Suspense} from 'react';\nimport {Image, Money} from '@shopify/hydrogen';\n\nexport const meta = () => {\n  return [{title: 'Hydrogen | Home'}];\n};\n\nexport async function loader({context}) {\n  const {storefront} = context;\n  const {collections} = await storefront.query(FEATURED_COLLECTION_QUERY);\n  const featuredCollection = collections.nodes[0];\n  const recommendedProducts = storefront.query(RECOMMENDED_PRODUCTS_QUERY);\n\n  return defer({featuredCollection, recommendedProducts});\n}\n\nexport default function Homepage() {\n  const data = useLoaderData();\n  return (\n    <div className=\"home\">\n      <FeaturedCollection collection={data.featuredCollection} />\n      <RecommendedProducts products={data.recommendedProducts} />\n    </div>\n  );\n}\n\nfunction FeaturedCollection({collection}) {\n  const image = collection.image;\n  return (\n    <Link\n      className=\"featured-collection\"\n      to={`/collections/${collection.handle}`}\n    >\n      {image && (\n        <div className=\"featured-collection-image\">\n          <Image data={image} sizes=\"100vw\" />\n        </div>\n      )}\n      <h1>{collection.title}</h1>\n    </Link>\n  );\n}\n\nfunction RecommendedProducts({products}) {\n  return (\n    <div className=\"recommended-products\">\n      <h2>Recommended Products</h2>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Await resolve={products}>\n          {({products}) => (\n            <div className=\"recommended-products-grid\">\n              {products.nodes.map((product) => (\n                <Link\n                  key={product.id}\n                  className=\"recommended-product\"\n                  to={`/products/${product.handle}`}\n                >\n                  <Image\n                    data={product.images.nodes[0]}\n                    aspectRatio=\"1/1\"\n                    sizes=\"(min-width: 45em) 20vw, 50vw\"\n                  />\n                  <h4>{product.title}</h4>\n                  <small>\n                    <Money data={product.priceRange.minVariantPrice} />\n                  </small>\n                </Link>\n              ))}\n            </div>\n          )}\n        </Await>\n      </Suspense>\n      <br />\n    </div>\n  );\n}\n\nconst FEATURED_COLLECTION_QUERY = `#graphql\n  fragment FeaturedCollection on Collection {\n    id\n    title\n    image {\n      id\n      url\n      altText\n      width\n      height\n    }\n    handle\n  }\n  query FeaturedCollection($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    collections(first: 1, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...FeaturedCollection\n      }\n    }\n  }\n`;\n\nconst RECOMMENDED_PRODUCTS_QUERY = `#graphql\n  fragment RecommendedProduct on Product {\n    id\n    title\n    handle\n    priceRange {\n      minVariantPrice {\n        amount\n        currencyCode\n      }\n    }\n    images(first: 1) {\n      nodes {\n        id\n        url\n        altText\n        width\n        height\n      }\n    }\n  }\n  query RecommendedProducts ($country: CountryCode, $language: LanguageCode)\n    @inContext(country: $country, language: $language) {\n    products(first: 4, sortKey: UPDATED_AT, reverse: true) {\n      nodes {\n        ...RecommendedProduct\n      }\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;AAEA,IAAAA,gBAAuB;AAoBjB;AAjBC,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC,EAAC,OAAO,kBAAiB,CAAC;AACpC;AAWe,SAAR,WAA4B;AACjC,QAAM,OAAO,cAAc;AAC3B,SACE,mDAAC,SAAI,WAAU,QACb;AAAA,uDAAC,sBAAmB,YAAY,KAAK,sBAArC;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACzD,mDAAC,uBAAoB,UAAU,KAAK,uBAApC;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,OAF3D;AAAA;AAAA;AAAA;AAAA,SAGA;AAEJ;AAEA,SAAS,mBAAmB,EAAC,WAAU,GAAG;AACxC,QAAM,QAAQ,WAAW;AACzB,SACE;AAAA,IAAC;AAAA;AAAA,MACC,WAAU;AAAA,MACV,IAAI,gBAAgB,WAAW;AAAA,MAE9B;AAAA,iBACC,mDAAC,SAAI,WAAU,6BACb,6DAAC,SAAM,MAAM,OAAO,OAAM,WAA1B;AAAA;AAAA;AAAA;AAAA,eAAkC,KADpC;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QAEF,mDAAC,QAAI,qBAAW,SAAhB;AAAA;AAAA;AAAA;AAAA,eAAsB;AAAA;AAAA;AAAA,IATxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAUA;AAEJ;AAEA,SAAS,oBAAoB,EAAC,SAAQ,GAAG;AACvC,SACE,mDAAC,SAAI,WAAU,wBACb;AAAA,uDAAC,QAAG,oCAAJ;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA,IACxB,mDAAC,0BAAS,UAAU,mDAAC,SAAI,0BAAL;AAAA;AAAA;AAAA;AAAA,WAAe,GACjC,6DAAC,SAAM,SAAS,UACb,WAAC,EAAC,UAAAC,UAAQ,MACT,mDAAC,SAAI,WAAU,6BACZ,UAAAA,UAAS,MAAM,IAAI,CAAC,YACnB;AAAA,MAAC;AAAA;AAAA,QAEC,WAAU;AAAA,QACV,IAAI,aAAa,QAAQ;AAAA,QAEzB;AAAA;AAAA,YAAC;AAAA;AAAA,cACC,MAAM,QAAQ,OAAO,MAAM,CAAC;AAAA,cAC5B,aAAY;AAAA,cACZ,OAAM;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAIA;AAAA,UACA,mDAAC,QAAI,kBAAQ,SAAb;AAAA;AAAA;AAAA;AAAA,iBAAmB;AAAA,UACnB,mDAAC,WACC,6DAAC,SAAM,MAAM,QAAQ,WAAW,mBAAhC;AAAA;AAAA;AAAA;AAAA,iBAAiD,KADnD;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA;AAAA;AAAA,MAZK,QAAQ;AAAA,MADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAcA,CACD,KAjBH;AAAA;AAAA;AAAA;AAAA,WAkBA,KApBJ;AAAA;AAAA;AAAA;AAAA,WAsBA,KAvBF;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,IACA,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,WAAI;AAAA,OA3BN;AAAA;AAAA;AAAA;AAAA,SA4BA;AAEJ;",
  "names": ["import_react", "products"]
}
